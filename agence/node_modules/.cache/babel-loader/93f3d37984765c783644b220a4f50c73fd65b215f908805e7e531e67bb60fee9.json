{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documents/partage/fpem/test/agence/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants/constants\";\nimport { Layout } from \"../components/Layout\";\nimport DataTable from 'react-data-table-component';\n// Define the Login function.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const About = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (localStorage.getItem('access_token') === null) {\n      window.location.href = '/login';\n    } else {\n      (async () => {\n        try {\n          const token = localStorage.getItem('access_token');\n          const {\n            data\n          } = await axios.get(API_URL + 'eglise/', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setMessage(data.message);\n        } catch (e) {\n          console.log('not auth' + e);\n        }\n      })();\n    }\n    ;\n  }, []);\n  const columns = [{\n    name: 'Title',\n    selector: row => row.title\n  }, {\n    name: 'Year',\n    selector: row => row.year\n  }];\n  const data = [{\n    id: 1,\n    title: 'Beetlejuice',\n    year: '1988'\n  }, {\n    id: 2,\n    title: 'Ghostbusters',\n    year: '1984'\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is about\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data,\n      expandableRows: true,\n      expandableRowsComponent: ExpandedComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["useEffect","useState","axios","API_URL","Layout","DataTable","jsxDEV","_jsxDEV","About","_s","message","setMessage","localStorage","getItem","window","location","href","token","data","get","headers","Authorization","e","console","log","columns","name","selector","row","title","year","id","children","fileName","_jsxFileName","lineNumber","columnNumber","expandableRows","expandableRowsComponent","ExpandedComponent","_c","$RefreshReg$"],"sources":["/home/samuel/Documents/partage/fpem/test/agence/src/pages/About.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants/constants\";\nimport { Layout } from \"../components/Layout\";\nimport DataTable from 'react-data-table-component';\n// Define the Login function.\nexport const About = () => {\n     const [message, setMessage] = useState('');\n     useEffect(() => {\n        if(localStorage.getItem('access_token') === null){                   \n            window.location.href = '/login'\n        }\n        else{\n         (async () => {\n           try {\n            const token = localStorage.getItem('access_token')\n             const {data} = await axios.get(   \n                            API_URL + 'eglise/', {\n                            headers: {\n                                Authorization: `Bearer ${token}`\n                                }}\n                           );\n             setMessage(data.message);\n          } catch (e) {\n            console.log('not auth'+ e)\n          }\n         })()};\n     }, []);\n    \n  const columns = [\n      {\n          name: 'Title',\n          selector: row => row.title,\n      },\n      {\n          name: 'Year',\n          selector: row => row.year,\n      },\n  ];\n  \n  const data = [\n      {\n          id: 1,\n          title: 'Beetlejuice',\n          year: '1988',\n      },\n      {\n          id: 2,\n          title: 'Ghostbusters',\n          year: '1984',\n      },\n  ]\n     return (\n        <Layout>\n            <h1>This is about</h1>\n            \n\n        <DataTable\n            columns={columns}\n            data={data}\n            expandableRows\n            expandableRowsComponent={ExpandedComponent}\n        />\n\n        </Layout>\n     )\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,4BAA4B;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACb,IAAGY,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,IAAI,EAAC;MAC7CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACnC,CAAC,MACG;MACH,CAAC,YAAY;QACX,IAAI;UACH,MAAMC,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;UACjD,MAAM;YAACK;UAAI,CAAC,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CACfhB,OAAO,GAAG,SAAS,EAAE;YACrBiB,OAAO,EAAE;cACLC,aAAa,EAAG,UAASJ,KAAM;YAC/B;UAAC,CAAC,CACN;UACfN,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC;QAC3B,CAAC,CAAC,OAAOY,CAAC,EAAE;UACVC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAEF,CAAC,CAAC;QAC5B;MACD,CAAC,GAAG;IAAA;IAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAET,MAAMG,OAAO,GAAG,CACZ;IACIC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;EACzB,CAAC,EACD;IACIH,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACE;EACzB,CAAC,CACJ;EAED,MAAMZ,IAAI,GAAG,CACT;IACIa,EAAE,EAAE,CAAC;IACLF,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE;EACV,CAAC,EACD;IACIC,EAAE,EAAE,CAAC;IACLF,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE;EACV,CAAC,CACJ;EACE,oBACGvB,OAAA,CAACH,MAAM;IAAA4B,QAAA,gBACHzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAG1B7B,OAAA,CAACF,SAAS;MACNoB,OAAO,EAAEA,OAAQ;MACjBP,IAAI,EAAEA,IAAK;MACXmB,cAAc;MACdC,uBAAuB,EAAEC;IAAkB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEO;AAEjB,CAAC;AAAA3B,EAAA,CA5DYD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}